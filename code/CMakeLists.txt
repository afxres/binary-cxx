cmake_minimum_required(VERSION 3.28)
project("binary-cxx")
if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    add_compile_options(/W4 /wd4458)
    set(BINARY_BUILD_TESTS ON)
    set(BINARY_BUILD_BENCHMARKS ON)
elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    add_compile_options(-Wall -Wextra -Wpedantic -Wsign-conversion -Werror)
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        set(BINARY_BUILD_TESTS ON)
        add_compile_options(-fprofile-arcs -ftest-coverage -coverage)
        add_link_options(-coverage -lgcov)
    endif()
elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    add_compile_options(-Wall -Wextra -Wpedantic -Wsign-conversion -Werror)
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        set(BINARY_BUILD_TESTS ON)
    endif()
endif()
if(CMAKE_BUILD_TYPE STREQUAL "Release" OR CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    include(CheckIPOSupported)
    check_ipo_supported(RESULT FLAG_IPO_SUPPORTED)
    if(FLAG_IPO_SUPPORTED)
        message(STATUS "IPO supported")
        set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
    endif()
endif()
add_subdirectory("binary")
add_subdirectory("binary-experimental")
if(BINARY_BUILD_TESTS)
    enable_testing()
    include(CTest)
    add_subdirectory("binary-tests")
    add_subdirectory("binary-experimental-tests")
    add_test(NAME "BINARY_TESTS" COMMAND "binary-tests")
    add_test(NAME "BINARY_EXPERIMENTAL_TESTS" COMMAND "binary-experimental-tests")
endif()
if(BINARY_BUILD_BENCHMARKS)
    add_subdirectory("binary-benchmarks/integration-tests")
endif()
